#commit all this stuff!!
version: 2
jobs:
  build:
    working_directory: ~/mern-starter
    # The primary container is an instance of the first list image listed. Your build commands run in this container.
    docker:
      - image: circleci/node:4.8.2
    # The secondary container is an instance of the second listed image which is run in a common network where ports exposed on the primary container are available on localhost.   
      - image: mongo:3.4.4
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - .node_modules
    # lots into my docker account to pull private images and push
    # - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
    # --rm=false is to keep circleci from getting errors, $CIRCLE_BUILDNUM  
    # is an environment variable kept by circleci. Used for source control
  

  # test:
  #   override:
  #     # runs tests and passes the enviroment variables stored in cirlceci
  #     - docker run -p 3001:3001 -e AUTH0_DOMAIN=$AUTH0_DOMAIN -e API_ID=$API_ID -e SENDGRID_API_KEY=$SENDGRID_API_KEY "deephire/backend:$CIRCLE_BUILD_NUM" pytest
  #     # runs container detached, exposes port 3001, and passed env variables.  
  #     - docker run -d -p 3001:3001 -e AUTH0_DOMAIN=$AUTH0_DOMAIN -e API_ID=$API_ID -e SENDGRID_API_KEY=$SENDGRID_API_KEY "deephire/backend:$CIRCLE_BUILD_NUM"; sleep 10
  #     # pings url to make sure that container started correctly  
  #     - curl --retry 10 --retry-delay 5 -v http://localhost:3001/ping
      

  # deployment:
  #   production:
  #     # runs these commands when something is pushed to master 
  #     branch: master
  #     commands:
  #       # pushes to dockerhub 
  #       - docker push "deephire/backend:$CIRCLE_BUILD_NUM"
  #       # updates variable BUILD_NUM with CIRCLE_BUILD env variable
  #       - sed -i'' -e "s;%BUILD_NUM%;$CIRCLE_BUILD_NUM;g" ./.deploy/prod/Dockerrun.aws.json
  #       # this is needed to set aws login keys 
  #       - bash ./.deploy/setup-eb.sh
  #       # goes into folder where Dockerrun.aws.json and .elasticbeanstalk config for
  #       # production is stored 
  #       - cd .deploy/prod && eb deploy -l $CIRCLE_BUILD_NUM

  #     # runs these commands when something is pushed to develop 
  #   development:
  #     branch: develop
  #     commands:
  #       # pushes to dockerhub 
  #       - docker push "deephire/backend:$CIRCLE_BUILD_NUM"
  #       # updates variable BUILD_NUM with CIRCLE_BUILD env variable
  #       - sed -i'' -e "s;%BUILD_NUM%;$CIRCLE_BUILD_NUM;g" ./.deploy/dev/Dockerrun.aws.json
  #       - bash ./.deploy/setup-eb.sh
  #       # goes into folder where Dockerrun.aws.json and .elasticbeanstalk config for
  #       # development is stored 
  #       - cd .deploy/dev && eb deploy -l $CIRCLE_BUILD_NUM